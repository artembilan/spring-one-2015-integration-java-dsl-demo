buildscript {
    ext {
        springBootVersion = '1.3.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'spring-one-2015-integration-java-dsl-demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
//    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url 'http://repo.spring.io/libs-staging-local' }
}


dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"
    compile "org.springframework.boot:spring-boot-starter-integration"
    compile "org.springframework.integration:spring-integration-java-dsl:1.1.0.M2"
    compile "org.springframework.integration:spring-integration-file"
    compile "org.springframework.integration:spring-integration-mongodb"
    compile "de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.47.1"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

springBoot {
    mainClass = 'org.springone2015.integration.dsl.demo.java.SpringOne2015IntegrationJavaDslDemoApplication'
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '2.5'
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

